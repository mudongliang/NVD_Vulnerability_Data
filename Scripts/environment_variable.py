#!/usr/bin/env python

from __future__ import print_function

import json
import os


total_num = 0

def get_all_datafile():
    json_list = []
    for dirname,folder,files in os.walk("."):
        for filename in files:
            if filename.endswith(".json"):
                json_list.append(filename)
    return json_list

def load(json_file):
    global total_num
    #print(json_file)
    env_list = []
    with open(json_file) as json_data:  
        data = json.load(json_data)
    #for key in data.keys():
    #    print(key)
    for items in data["CVE_Items"]:
        cve_info = items["cve"]
        #print(cve_info["CVE_data_meta"]["ID"])
        cve_id = cve_info["CVE_data_meta"]["ID"]
        #print(cve_id)

        env_flag = False
        # check whether it is incomplete fix
        for desc in cve_info["description"]["description_data"]:
            #print(desc["value"])
            if ("environment variable" in desc["value"]) :
                env_flag = True
                break

        if not env_flag:
            continue

        '''
        kernel_flag = False
        # check whether it is Linux Kernel Vulnerability
        for vendor in cve_info["affects"]["vendor"]["vendor_data"]:
            if vendor["vendor_name"] != "linux":
                continue
            for product in vendor["product"]["product_data"]:
                #print(product["product_name"])
                if product["product_name"] == "linux_kernel":
                    kernel_flag = True
        if not kernel_flag:
            continue
        '''

        env_list.append([cve_id, desc["value"]])
        #env_list.append(cve_id)

    total_num = total_num + len(env_list)

    for env in env_list:
        #print("- [ ] ", end='')
        print(env)

if __name__ == "__main__":
    json_files = get_all_datafile()
    #json_files = ["nvdcve-1.0-2016.json","nvdcve-1.0-2017.json","nvdcve-1.0-2018.json"]
    #print(json_files)
    for json_file in json_files:
        load(json_file)
    print(total_num)
